### LOG many_pipelines_MVT_search_preproc V6 ############################
Name of the results: many_pipelines_MVT_search_preproc
Version: 6
Node index: 4
Date: 2024-03-08 15:40:40

### DEVICE ############################
Number of nodes: 10
Number of cores: 4

### Parameters preprocessing ############################
Number of parameters for this node: 1
Number of param per core: 0
Estimated time for this node: 0.0 minutes, 0.0 hours

### Grid preprocessing ############################
params: {'EPOCHS_TMIN': [-1], 'EPOCHS_LENGTH': [3], 'EPOCHS_EMPTY_FROM_MVT_TMIN': [-4], 'FMIN': [1], 'FMAX': [40]}

### Results preprocessing ############################
Preprocessing done, time: 8.15733338991801 minutes, 0.1359555564986335 hours

### Pipeline ############################
Number of pipelines: 7
Number of pipelines per core: 1
Estimated time for the pipeline: 11.0 minutes, 0.18333333333333332 hours

### Grid pipeline ############################
pipelines: {'pipeline_1': {'pipeline': [Pipeline(steps=[('cov', Covariances()), ('ts', TangentSpace()), ('clf', SVC())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_2': {'pipeline': [Pipeline(steps=[('cov', Covariances()), ('ts', TangentSpace()),
                ('clf', LogisticRegression())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_3': {'pipeline': [Pipeline(steps=[('cov', Covariances()), ('ts', TangentSpace()),
                ('clf', RandomForestClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_4': {'pipeline': [Pipeline(steps=[('cov', Covariances()), ('ts', TangentSpace()),
                ('clf', AdaBoostClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_5': {'pipeline': [Pipeline(steps=[('cov', Covariances()), ('ts', TangentSpace()),
                ('clf', LinearDiscriminantAnalysis())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_6': {'pipeline': [Pipeline(steps=[('cov', Covariances()), ('ts', TangentSpace()),
                ('vec', FlattenEEGData()), ('clf', MLPClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_7': {'pipeline': [Pipeline(steps=[('cov', Covariances()), ('ts', TangentSpace()),
                ('ss', StandardScaler()), ('clf', SVC())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_8': {'pipeline': [Pipeline(steps=[('cov', Covariances()), ('ts', TangentSpace()),
                ('ss', StandardScaler()), ('clf', LogisticRegression())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_9': {'pipeline': [Pipeline(steps=[('cov', Covariances()), ('ts', TangentSpace()),
                ('ss', StandardScaler()), ('clf', RandomForestClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_10': {'pipeline': [Pipeline(steps=[('cov', Covariances()), ('ts', TangentSpace()),
                ('ss', StandardScaler()), ('clf', AdaBoostClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_11': {'pipeline': [Pipeline(steps=[('cov', Covariances()), ('ts', TangentSpace()),
                ('ss', StandardScaler()),
                ('clf', LinearDiscriminantAnalysis())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_12': {'pipeline': [Pipeline(steps=[('cov', Covariances()), ('ts', TangentSpace()),
                ('ss', StandardScaler()), ('vec', FlattenEEGData()),
                ('clf', MLPClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_13': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('ss', StandardScaler()),
                ('clf', SVC())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_14': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('ss', StandardScaler()),
                ('clf', LogisticRegression())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_15': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('ss', StandardScaler()),
                ('clf', RandomForestClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_16': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('ss', StandardScaler()),
                ('clf', AdaBoostClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_17': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('ss', StandardScaler()),
                ('clf', LinearDiscriminantAnalysis())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_18': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('ss', StandardScaler()),
                ('vec', FlattenEEGData()), ('clf', MLPClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_19': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('clf', SVC())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_20': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('clf', LogisticRegression())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_21': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()),
                ('clf', RandomForestClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_22': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('clf', AdaBoostClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_23': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()),
                ('clf', LinearDiscriminantAnalysis())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_24': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('vec', FlattenEEGData()),
                ('clf', MLPClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_25': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('cov', XdawnCovariances()),
                ('clf', SVC())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_26': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('cov', XdawnCovariances()),
                ('clf', LogisticRegression())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_27': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('cov', XdawnCovariances()),
                ('clf', RandomForestClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_28': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('cov', XdawnCovariances()),
                ('clf', AdaBoostClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_29': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('cov', XdawnCovariances()),
                ('clf', LinearDiscriminantAnalysis())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_30': {'pipeline': [Pipeline(steps=[('bp', BandPowerExtractor()), ('cov', XdawnCovariances()),
                ('vec', FlattenEEGData()), ('clf', MLPClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_31': {'pipeline': [Pipeline(steps=[('wavelet', EEGWaveletFeatures()), ('clf', SVC())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_32': {'pipeline': [Pipeline(steps=[('wavelet', EEGWaveletFeatures()),
                ('clf', LogisticRegression())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_33': {'pipeline': [Pipeline(steps=[('wavelet', EEGWaveletFeatures()),
                ('clf', RandomForestClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_34': {'pipeline': [Pipeline(steps=[('wavelet', EEGWaveletFeatures()),
                ('clf', AdaBoostClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_35': {'pipeline': [Pipeline(steps=[('wavelet', EEGWaveletFeatures()),
                ('clf', LinearDiscriminantAnalysis())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_36': {'pipeline': [Pipeline(steps=[('wavelet', EEGWaveletFeatures()), ('vec', FlattenEEGData()),
                ('clf', MLPClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_37': {'pipeline': [Pipeline(steps=[('wavelet', EEGWaveletFeatures()), ('ss', StandardScaler()),
                ('clf', SVC())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_38': {'pipeline': [Pipeline(steps=[('wavelet', EEGWaveletFeatures()), ('ss', StandardScaler()),
                ('clf', LogisticRegression())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_39': {'pipeline': [Pipeline(steps=[('wavelet', EEGWaveletFeatures()), ('ss', StandardScaler()),
                ('clf', RandomForestClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_40': {'pipeline': [Pipeline(steps=[('wavelet', EEGWaveletFeatures()), ('ss', StandardScaler()),
                ('clf', AdaBoostClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_41': {'pipeline': [Pipeline(steps=[('wavelet', EEGWaveletFeatures()), ('ss', StandardScaler()),
                ('clf', LinearDiscriminantAnalysis())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_42': {'pipeline': [Pipeline(steps=[('wavelet', EEGWaveletFeatures()), ('ss', StandardScaler()),
                ('vec', FlattenEEGData()), ('clf', MLPClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_43': {'pipeline': [Pipeline(steps=[('cov', XdawnCovariances()), ('clf', SVC())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_44': {'pipeline': [Pipeline(steps=[('cov', XdawnCovariances()), ('clf', LogisticRegression())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_45': {'pipeline': [Pipeline(steps=[('cov', XdawnCovariances()), ('clf', RandomForestClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_46': {'pipeline': [Pipeline(steps=[('cov', XdawnCovariances()), ('clf', AdaBoostClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_47': {'pipeline': [Pipeline(steps=[('cov', XdawnCovariances()),
                ('clf', LinearDiscriminantAnalysis())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_48': {'pipeline': [Pipeline(steps=[('cov', XdawnCovariances()), ('vec', FlattenEEGData()),
                ('clf', MLPClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_49': {'pipeline': [Pipeline(steps=[('cov', XdawnCovariances()), ('vec', MyVectorizer()),
                ('ss', StandardScaler()), ('clf', SVC())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_50': {'pipeline': [Pipeline(steps=[('cov', XdawnCovariances()), ('vec', MyVectorizer()),
                ('ss', StandardScaler()), ('clf', LogisticRegression())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_51': {'pipeline': [Pipeline(steps=[('cov', XdawnCovariances()), ('vec', MyVectorizer()),
                ('ss', StandardScaler()), ('clf', RandomForestClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_52': {'pipeline': [Pipeline(steps=[('cov', XdawnCovariances()), ('vec', MyVectorizer()),
                ('ss', StandardScaler()), ('clf', AdaBoostClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_53': {'pipeline': [Pipeline(steps=[('cov', XdawnCovariances()), ('vec', MyVectorizer()),
                ('ss', StandardScaler()),
                ('clf', LinearDiscriminantAnalysis())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_54': {'pipeline': [Pipeline(steps=[('cov', XdawnCovariances()), ('vec', MyVectorizer()),
                ('ss', StandardScaler()), ('clf', MLPClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_55': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('clf', SVC())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_56': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('clf', LogisticRegression())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_57': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('clf', RandomForestClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_58': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('clf', AdaBoostClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_59': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('clf', LinearDiscriminantAnalysis())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_60': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('vec', FlattenEEGData()), ('clf', MLPClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_61': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('ss', StandardScaler()), ('clf', SVC())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_62': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('ss', StandardScaler()), ('clf', LogisticRegression())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_63': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('ss', StandardScaler()), ('clf', RandomForestClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_64': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('ss', StandardScaler()), ('clf', AdaBoostClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_65': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('ss', StandardScaler()),
                ('clf', LinearDiscriminantAnalysis())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_66': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('ss', StandardScaler()), ('vec', FlattenEEGData()),
                ('clf', MLPClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_67': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('cov', XdawnCovariances()), ('clf', SVC())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_68': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('cov', XdawnCovariances()), ('clf', LogisticRegression())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_69': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('cov', XdawnCovariances()),
                ('clf', RandomForestClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_70': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('cov', XdawnCovariances()), ('clf', AdaBoostClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_71': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('cov', XdawnCovariances()),
                ('clf', LinearDiscriminantAnalysis())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}, 'pipeline_72': {'pipeline': [Pipeline(steps=[('csp',
                 CSP({'component_order': 'mutual_info',
 'cov_est': 'concat',
 'cov_method_params': None,
 'log': None,
 'n_components': 4,
 'norm_trace': False,
 'rank': None,
 'reg': None,
 'transform_into': 'average_power'})),
                ('cov', XdawnCovariances()), ('vec', FlattenEEGData()),
                ('clf', MLPClassifier())])], 'file_preprocessing_path': ['./data/processed//NODE_4/params_0.npy']}}

### Results training ############################
Training and testing done, time: 60.84257549444835 minutes, 1.0140429249074725 hours

